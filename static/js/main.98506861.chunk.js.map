{"version":3,"sources":["containers/Navbar/Navbar.js","components/Header/Header.js","components/Product/Product.js","network/BaseAxios.js","containers/Products/ProductList.js","components/Footer/Footer.js","components/Cart/CartModal.js","containers/Layout/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["HeaderNav","state","collapseID","toggleCollapse","_this","setState","prevState","react_default","a","createElement","className","style","paddingRight","paddingLeft","mdbreact","color","dark","expand","fixed","onClick","this","id","isOpen","navbar","right","to","props","clickviewCart","cartInfo","pdtCount","icon","nav","src","height","padding","alt","href","React","Component","Header","Navbar","ProductItem","narrow","ecommerce","width","marginTop","cascade","top","pdtinfo","pdtImg","pdtCategory","pdtName","PdtShrtDesc","pdtPrice","size","addtoCart","instance","axios","create","baseURL","ProductList","products","loading","error","hasMore","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","length","loadProaducts","getProductInfo","_this2","startAt","endAt","get","then","response","moreProds","Object","values","data","toConsumableArray","concat","catch","addEventListener","removeEventListener","_this3","map","pdt","Product","key","getProduct","FooterPage","fluid","Date","getFullYear","ModalPage","modal","toggle","show","modalClosed","pdts","scope","maxHeight","type","defaultValue","count","aria-label","onChange","e","handlePdtCountChange","parseInt","removefromCart","data-toggle","data-placement","title","data-original-title","Layout","showCart","cancelhandler","viewCarthandler","handleAddtoCart","pdtObj","newCartInfo","pdtInfotoadd","objIndex","findIndex","obj","push","handleRemovefromCart","incart","altCartinfo","oldobjIndex","filter","event","target","value","components_Header_Header","Products_ProductList","Footer","CartModal","App","BrowserRouter","containers_Layout_Layout","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","src_App","getElementById","URL","process","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.98506861.chunk.js","sourcesContent":["import React from \"react\";\nimport { MDBNavbar, NavbarBrand, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Fa } from \"mdbreact\";\n\nclass HeaderNav extends React.Component {\n    state = {\n        collapseID: \"\"\n    };\n\n    toggleCollapse = collapseID => () =>\n        this.setState(prevState => ({\n            collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n        }));\n\n    render() {\n        return (\n            <div className=\"container-fluid\" style={{ paddingRight: \"0\", paddingLeft: \"0\" }}>\n                <MDBNavbar color=\"secondary-color\" dark expand=\"md\" fixed=\"top\">\n                    <NavbarBrand>\n                        <strong className=\"white-text\">Shopping Cart</strong>\n                    </NavbarBrand>\n                    <NavbarToggler onClick={this.toggleCollapse(\"navbarCollapse3\")} />\n                    <Collapse id=\"navbarCollapse3\" isOpen={this.state.collapseID} navbar>\n                        <NavbarNav right>\n                            {/* <NavItem active>\n                                <NavLink to=\"#!\">Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to=\"#!\">Features</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to=\"#!\">Pricing</NavLink>\n                            </NavItem> */}\n\n                            <NavItem>\n                                <NavLink className=\"waves-effect waves-light d-flex align-items-center\" to=\"#!\" onClick={this.props.clickviewCart}> {this.props.cartInfo.pdtCount} <Fa icon=\"shopping-cart\" className=\"ml-1\" /></NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <Dropdown>\n                                    <DropdownToggle className=\"dopdown-toggle\" nav>\n                                        <img src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\" className=\"rounded-circle z-depth-0\" style={{ height: \"35px\", padding: 0 }} alt=\"\" />\n                                    </DropdownToggle>\n                                    <DropdownMenu className=\"dropdown-default\" right>\n                                        <DropdownItem href=\"#!\">My account</DropdownItem>\n                                        <DropdownItem href=\"#!\">Log out</DropdownItem>\n                                    </DropdownMenu>\n                                </Dropdown>\n                            </NavItem>\n                        </NavbarNav>\n                    </Collapse>\n                </MDBNavbar>\n            </div>\n        );\n    }\n}\n\nexport default HeaderNav;","import React from 'react';\n\n\nimport HeaderNav from '../../containers/Navbar/Navbar';\n\nconst Header = (props) => (\n    <header >\n        <HeaderNav clickviewCart={props.clickviewCart} cartInfo={props.cartInfo} />\n    </header>\n);\n\nexport default Header;","import React, { Component } from 'react';\nimport { Card, CardBody, CardImage, CardTitle, CardText, Col, CardFooter, Button, Fa } from 'mdbreact';\n\nclass ProductItem extends Component {\n    render() {\n        return (\n            <Col>\n                <Card narrow ecommerce className=\"mb-2\" style={{ width: \"16rem\", marginTop: \"20px\" }}>\n                    <CardImage cascade top src={this.props.pdtinfo.pdtImg} alt=\"sample photo\" />\n                    <CardBody cascade>\n                        <a href=\"/\" className=\"text-muted\">\n                            <h5>{this.props.pdtinfo.pdtCategory}</h5>\n                        </a>\n                        <CardTitle><strong><a href=\"/\">{this.props.pdtinfo.pdtName}</a></strong></CardTitle>\n                        <CardText>{this.props.pdtinfo.PdtShrtDesc}</CardText>\n                        <CardFooter className=\"px-1 pt-0 pb-0\">\n                            <span className=\"float-left mt-3\"><strong>{this.props.pdtinfo.pdtPrice}</strong></span>\n                            <span className=\"float-right mt-2\">\n                                <Button color=\"primary\" size=\"sm\" onClick={() => this.props.addtoCart(this.props.pdtinfo)}><Fa icon=\"shopping-cart\" className=\"mr-1\" />Add to cart</Button>\n                            </span>\n                        </CardFooter>\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n    }\n}\n\nexport default ProductItem;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://rtshopcart.firebaseio.com\"\n})\n\nexport default instance;","import React, { Component } from 'react';\n\nimport { Row } from 'mdbreact';\n\nimport ProductItem from '../../components/Product/Product';\nimport axios from '../../network/BaseAxios';\n\nclass ProductList extends Component {\n\n    state = {\n        products: [],\n        loading: false,\n        error: false,\n        hasMore: true,\n\n    }\n\n    loadProaducts() {\n\n        const startAt = this.state.products.length;\n        //console.log(startAt);\n        const endAt = startAt > 0 ? startAt + 8 : 7;\n        //console.log(endAt);\n        this.setState({ loading: true })\n        axios.get('/products.json?orderBy=\"id\"&endAt=' + endAt + '&startAt=' + startAt)\n            .then(response => {\n                //console.log(response.data);\n                const moreProds = Object.values(response.data)\n                if (moreProds.length > 0) {\n                    this.setState({ products: [...this.state.products, ...moreProds], loading: false });\n                    if (moreProds.length < 8) {\n                        this.setState({ hasMore: false });\n                    }\n                } else {\n                    this.setState({ hasMore: false });\n                }\n\n            }).catch(error => {\n                this.setState({ error: true });\n            });\n    }\n    componentDidMount() {\n        this.loadProaducts();\n        window.addEventListener('scroll', this.onScroll, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.onScroll, false);\n    }\n\n    onScroll = () => {\n        if (\n            (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500) && this.state.products.length && !this.state.loading\n        ) {\n\n            if (this.state.hasMore) {\n                this.loadProaducts();\n            }\n        }\n    }\n\n    getProductInfo = (id) => {\n        return this.state.products[id];\n    }\n\n    render() {\n\n        const products = this.state.products;\n\n        return (\n            <Row>\n                {products.map(pdt => {\n                    return <ProductItem\n                        key={pdt.id}\n                        pdtinfo={pdt}\n                        addtoCart={this.props.addtoCart}\n                        getProduct={this.getProductInfo}\n                    />\n                })\n\n                }\n\n            </Row>\n        );\n    }\n}\n\nexport default ProductList;\n","import React, { Component } from \"react\";\nimport { Container, Footer } from \"mdbreact\";\n\nclass FooterPage extends Component {\n    render() {\n        return (\n            <Footer color=\"secondary-color\" className=\"font-small mt-4\">\n                <div className=\"footer-copyright text-center py-3\">\n                    <Container fluid>\n                        &copy; {new Date().getFullYear()} Copyright:{\" \"}\n                        <a href=\"/\"> ShoppingCart </a>\n                    </Container>\n                </div>\n            </Footer>\n        );\n    }\n}\n\nexport default FooterPage;","import React, { Component } from 'react';\nimport { Container, Button, Modal, ModalBody, ModalHeader, ModalFooter } from 'mdbreact';\n\n\n\nclass ModalPage extends Component {\n    state = {\n        modal: false\n    };\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n    \n\n    render() {\n        return (\n            <Container>\n                <Modal isOpen={this.props.show} toggle={this.props.modalClosed} size=\"lg\">\n                    <ModalHeader toggle={this.props.modalClosed}>\n                        Total items: {this.props.cartInfo.pdtCount}\n                    </ModalHeader>\n                    <ModalBody>\n\n                        <table className=\"table product-table\">\n                            <thead className=\"mdb-color lighten-5\">\n                                <tr>\n                                    <th></th>\n                                    <th className=\"font-weight-bold\">\n                                        <strong>Product</strong>\n                                    </th>\n                                    <th></th>\n                                    <th className=\"font-weight-bold\">\n                                        <strong>Price</strong>\n                                    </th>\n                                    <th className=\"font-weight-bold\">\n                                        <strong>QTY</strong>\n                                    </th>\n                                    <th className=\"font-weight-bold\">\n                                        <strong>Amount</strong>\n                                    </th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.cartInfo.pdts.map(pdt => {\n                                    return (<tr key={pdt.pdtinfo.id}>\n                                        <th scope=\"row\">\n                                            <img src={pdt.pdtinfo.pdtImg} alt=\"\" className=\"img-fluid z-depth-0\" style={{ maxHeight: \"120px\" }} />\n                                        </th>\n                                        <td>\n                                            <h5 className=\"mt-3\">\n                                                <strong>{pdt.pdtinfo.pdtName}</strong>\n                                            </h5>\n                                            <p className=\"text-muted\">{pdt.pdtinfo.pdtCategory}</p>\n                                        </td>\n                                        <td></td>\n                                        <td>{pdt.pdtinfo.pdtPrice}</td>\n                                        <td>\n                                            <input type=\"number\" defaultValue={pdt.count} aria-label=\"Search\" onChange={(e) => this.props.handlePdtCountChange(pdt, e)} className=\"form-control\" style={{ width: \"100px\" }} />\n                                        </td>\n                                        <td className=\"font-weight-bold\">\n                                            <strong>{pdt.count * parseInt(pdt.pdtinfo.pdtPrice)}$</strong>\n                                        </td>\n                                        <td>\n                                            <button type=\"button\" onClick={() => this.props.removefromCart(pdt.pdtinfo, true)} className=\"btn btn-sm btn-primary waves-effect waves-light\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Remove item\">X</button>\n                                        </td>\n                                    </tr>);\n                                })}\n                            </tbody>\n                        </table>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"secondary\" onClick={this.props.modalClosed}>Close</Button>\n                        <Button color=\"primary\">Save changes</Button>\n                    </ModalFooter>\n                </Modal>\n            </Container>\n        );\n    }\n}\nexport default ModalPage;","import React, { Component } from 'react';\n\nimport Header from '../../components/Header/Header';\n\nimport ProductList from '../Products/ProductList';\nimport FooterPage from '../../components/Footer/Footer';\n\nimport ModalPage from '../../components/Cart/CartModal';\n\nclass Layout extends Component {\n    state = {\n        showCart: false,\n        cartInfo: {\n            pdtCount: 0,\n            pdts: []\n        }\n\n    }\n    cancelhandler = () => {\n        this.setState({ showCart: false });\n    }\n\n    viewCarthandler = () => {\n        this.setState({ showCart: true });\n    }\n\n\n\n    handleAddtoCart = (pdtObj) => {\n        //console.log(pdtObj);\n        let newCartInfo = this.state.cartInfo;\n        let pdtInfotoadd = {\n            id: pdtObj.id,\n            pdtinfo: pdtObj,\n            count: 1\n        }\n        const objIndex = newCartInfo.pdts.findIndex((obj => obj.id === pdtObj.id));\n        if(objIndex > -1){\n            newCartInfo.pdts[objIndex].count++ ;\n        } else {\n            newCartInfo.pdts.push(pdtInfotoadd);\n        }\n        newCartInfo.pdtCount = newCartInfo.pdts.length;\n        //console.log(newCartInfo.pdts);\n        this.setState({ cartInfo: newCartInfo });\n\n    }\n\n    handleRemovefromCart = (pdtObj, incart) => {\n        let altCartinfo = this.state.cartInfo;\n        const oldobjIndex = altCartinfo.pdts.findIndex((obj => obj.id === pdtObj.id));\n        //console.log(oldobjIndex);\n        if(oldobjIndex > -1 && altCartinfo.pdts[oldobjIndex].count > 1 && !incart){\n                altCartinfo.pdts[oldobjIndex].count--;\n        } else {\n            altCartinfo.pdts = altCartinfo.pdts.filter(pdt => pdt.id !== pdtObj.id);\n            altCartinfo.pdtCount = altCartinfo.pdts.length;\n        }\n        \n        this.setState({ cartInfo: altCartinfo });\n    }\n\n    handlePdtCountChange = (pdtObj, event) => {\n        if(pdtObj.count > event.target.value){\n           this.handleRemovefromCart(pdtObj);\n\n        } else if(pdtObj.count < event.target.value) {\n            this.handleAddtoCart(pdtObj)\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Header clickviewCart={this.viewCarthandler} modalClosed={this.cancelhandler} cartInfo={this.state.cartInfo} />\n                <div className=\"container-fluid\" style={{ marginTop: \"70px\" }}>\n                    <ProductList addtoCart={this.handleAddtoCart} />\n                </div>\n                <FooterPage />\n                <ModalPage\n                    show={this.state.showCart}\n                    modalClosed={this.cancelhandler}\n                    cartInfo={this.state.cartInfo}\n                    removefromCart={this.handleRemovefromCart}\n                    handlePdtCountChange={this.handlePdtCountChange} >\n                    \n\n                </ModalPage>\n            </div>\n        );\n    }\n}\n\nexport default Layout; ","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout />\n\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}